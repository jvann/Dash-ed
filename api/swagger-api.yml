swagger: '2.0'
info:
  version: '1.0.0'
  title: Dash-ed
  description: |
    REST API server for the Dash-ed application.
    
    ## REST
    Dash-ed is a RESTful API:
    - It makes use of native concepts and techniques of HTTP
    - It follows the constraints of REST
    - It is defined in terms of endpoints and parameters
    
    ## JSON
    The Dash-ed API uses exclusively JSON, so you should always set the
    <strong>Content-type</strong> header to <strong>application/json</strong>.
host: dash-ed.herokuapp.com
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      operationId: getRoot
      summary: Get the entry point
      tags:
        - root
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  text:
                    type: string
                    default: Hello Dash-ed REST API!
                required:
                  - text
  /users:
    post:
      operationId: createUser
      summary: Create a new user
      tags:
        - Users
      parameters:
        - name: newUser
          in: body
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
  
  /questions:
    post:
      operationId: createQuestion
      summary: Create a new question
      tags:
        - Questions
      parameters:
        - name: newQuestion
          in: body
          schema:
            $ref: '#/definitions/NewQuestion'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Question'

definitions:
  NewQuestion:
    type: object
    properties:
      kind:
        type: integer
        format: int64
        minimum: 0
      description:
        type: string
      correctAnswers:
        type: array
        items:
          type: string
      incorrectAnswers:
        type: array
        items:
          type: string
    required:
      - kind
      - description
      - correctAnswers
      - incorrectAnswers

  Question:
    type: object
    properties:
      id:
        type: integer
        format: int64
        minimum: 0
      kind:
        type: number
        minimum: 0
      description:
        type: string
        format: email
      correctAnswers:
        type: array
        items:
          type: string
      incorrectAnswers:
        type: array
        items:
          type: string
    required:
      - id
      - kind
      - description
      - correctAnswers
      - incorrectAnswers

  NewUser:
    type: object
    properties:
      firstName:
        type: string
      email:
        type: string
        format: email
    required:
      - firstName
      - email

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        minimum: 0
      email:
        type: string
        format: email
    required:
      - id
      - email
      